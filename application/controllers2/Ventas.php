<?phpClass Ventas extends CI_Controller {    function __construct() {        parent::__construct();        $this->load->helper('url');    }    public function index() {        if ($this->session->userdata('logged_id')) {            $this->load->helper('form');            $sesion = $this->session->userdata('logged_id');            $data['main_content'] = 'ventas/reporte';            $data['titutlo'] = 'Teleferico Taxco :: Generador de Tickets';            $data['subtitulo'] = 'Reporte de Venta';            $data['menu'] = 'reporte';            $data['usuario'] = $sesion['usuario'];            $data['nombre'] = $sesion['nombre'];            $data['rol'] = $sesion['rol'];            $page = $this->input->get('page');            if (isset($page))                $data['page'] = $page;            else                $data['page'] = 1;            $this->load->view('includes/template', $data);        } else            redirect('login', 'refresh');    }    public function exportapdf() {        if ($this->session->userdata('logged_id')) {            $this->load->library('fpdf');            $this->load->library('barcode');                          $sesion = $this->session->userdata('logged_id');            $user = $sesion['usuario'];            $boletos=0;            $data = array(                'fechainicio' => $this->input->post('fechainicio'),                'fechafin' => $this->input->post('fechafin'),                'usuario' => $this->input->post('usuario'),                 'tipo' => $this->input->post('tipo'),                 'motivo' => $this->input->post('motivo'),                 'user' => $user            );            //var_dump($data);            if (!empty($data["fechainicio"]))                $data["fechainicio"] = (new DateTime($data["fechainicio"]))->format('Y-m-d H:i:s');            if (!empty($data["fechafin"]))                $data["fechafin"] = (new DateTime($data["fechafin"]))->format('Y-m-d H:i:s');            $pdf = new FPDF('L', 'pt', 'Letter');            $pdf->AddPage();            $fontSize = 10;            $pdf->SetFont('Arial', 'B', $fontSize);            $pdf->SetTextColor(0, 0, 0);            $pdf->SetAutoPageBreak(true, 0);            $pdf->Cell(535, 25, 'REPORTE DE VENTAS', 0, 1, 'C');            $pdf->Cell(535, 25, $this->input->post('fechainicio') . ' al ' . $this->input->post('fechafin'), 0, 1, 'C');            $pdf->Cell(535, 25, 'Usuario: ' . $this->input->post('usuario'), 0, 1, 'C');            $pdf->Cell(50, 15, 'Folio', 1, 0, 'C');            $pdf->Cell(75, 15, 'Fecha', 1, 0, 'C');            $pdf->Cell(150, 15, 'Codigo de Barras', 1, 0, 'C');            $pdf->Cell(60, 15, 'Tipo', 1, 0, 'C');            $pdf->Cell(60, 15, 'Personas', 1, 0, 'C');             $pdf->Cell(60, 15, 'Accesos', 1, 0, 'C');            $pdf->Cell(50, 15, 'Total', 1, 0, 'C');            $pdf->Cell(50, 15, 'Descuento', 1, 0, 'C');            $pdf->Cell(200, 15, 'Comentario', 1, 1, 'C');            $subtotal = 0;            $iva = 0;            $total = 0;            $result = $this->venta->select($data);            foreach ($result->result()as $row) {                $pdf->Cell(50, 15, $row->folio, 'T', 0, 'C');                $pdf->Cell(75, 15, date('d/M/y H:i:s', strtotime($row->fecha)), 'T', 0, 'C');                $pdf->Cell(360, 15, '', 'T', 1, 'C');                $result2 = $this->detalleventa->detalle($row->folio,$data);                foreach ($result2->result()as $detalle) {                    $pdf->SetX(150);                    $pdf->Cell(150, 15, $detalle->codigo_barras, 0, 0, 'C');                    $detalleticket = $this->detalletickets->datos($detalle->codigo_barras);                    $ticketgenerado = $this->ticketsgenerados->datos($detalleticket->id_ticketsgenerados);                    $precioticket = $this->preciotickets->datos($ticketgenerado->id_preciotickets);                    $pdf->Cell(60, 15, utf8_decode($precioticket->tipo), 0, 0, 'C');                    $pdf->Cell(60, 15, utf8_decode($detalleticket->open), 0, 0, 'C');                    $pdf->Cell(60, 15, utf8_decode($detalleticket->contador), 0, 0, 'C');                    $pdf->Cell(50, 15, "$" . $detalle->subtotal, 0, 0, 'L');                    $pdf->Cell(70, 15, utf8_decode($detalle->descuento * 100) . "%", 0, 0, 'C');                    $pdf->Cell(200, 25, utf8_decode($detalle->motivodescuento), 0, 1, 'L');                      $total+=$detalle->subtotal;			$boletos+=$detalleticket->open;                }                //$subtotal+=$row->subtotal;                //$iva+=$row->iva;             //   $total+=$row->total;            }//            $pdf->Cell(461, 25, 'Subtotal:', 'T', 0, 'R');//            $pdf->Cell(75, 25, '$' . number_format($subtotal, 2, ",", "."), 'T', 1, 'C');//            $pdf->Cell(461, 25, 'IVA:', 'T', 0, 'R');//            $pdf->Cell(75, 25, '$' . number_format($iva, 2, ",", "."), 'T', 1, 'C');            $pdf->Cell(461, 25, 'Total:', 'T', 0, 'R');            $pdf->Cell(75, 25, '$' . number_format($total, 2, ",", "."), 'T', 1, 'C');            $tipos = $this->detalleventa->acumuladores_tipo($data);            $pdf->AddPage();                          $pdf->Cell(750, 25, 'Acumulado de Ventas', 0, 1, 'C');            $pdf->Cell(750, 25, $this->input->post('fechainicio') . ' al ' . $this->input->post('fechafin'), 0, 1, 'C');            $pdf->Cell(250, 25, '', 0, 0, 'C');            $pdf->Cell(150, 25, 'Cajero: ' . $this->input->post('usuario'), 0, 0, 'C');            if(!empty($this->input->post('usuario')))            $pdf->Cell(100, 25, '' . $this->input->post('cajas'), 0, 1, 'C');            $pdf->Cell(75, 25, '', 0, 1, 'R');            $pdf->Cell(200, 25, '', 0, 0, 'R');            $pdf->Cell(150, 25, 'Tipo', 1, 0, 'C');            $pdf->Cell(75, 25, 'Cantidad', 1, 0, 'C');            $pdf->Cell(75, 25, 'Subtotal', 1, 1, 'C');            $suma=0;            foreach ($tipos->result()as $tipo) {                $pdf->Cell(200, 25, '', 0, 0, 'R');                                $pdf->Cell(150, 25, utf8_decode($tipo->tipo), 1, 0, 'C');                $pdf->Cell(75, 25, ($tipo->redondo == 0) ? $tipo->cantidad : $tipo->cantidad / 2, 1, 0, 'C');                $pdf->Cell(75, 25, $tipo->subtotal , 1, 1, 'C');                $suma+= $tipo->subtotal;            }             $pdf->Cell(200, 25, '', 0, 0, 'R');                                $pdf->Cell(150, 25, "Total", 1, 0, 'C');               $pdf->Cell(75, 25,$boletos, 1, 0, 'C');                $pdf->Cell(75, 25,'$'.number_format($suma, 2, '.', ',')  , 1, 1, 'C');                        $filename = 'Ventas.pdf';            $pdf->Output($filename, 'F');            echo $filename;        } else            redirect('login', 'refresh');    }    public function reporte() {        if ($this->session->userdata('logged_id')) {            $rangofecha = array(                'fechainicio' => $this->input->post('fechainicio'),                'fechafin' => $this->input->post('fechafin'),                'usuario' => $this->input->post('usuarios'),            );            if (!empty($rangofecha["fechainicio"]))                $rangofecha["fechainicio"] = (new DateTime($rangofecha["fechainicio"]))->format('Y-m-d H:i:s');            if (!empty($rangofecha["fechafin"]))                $rangofecha["fechafin"] = (new DateTime($rangofecha["fechafin"]))->format('Y-m-d H:i:s');            $config['base_url'] = base_url() . 'ventas';            $config['first_url'] = base_url() . 'ventas/';            $config['uri_segment'] = 3;            $config['use_page_numbers'] = TRUE;            $config['page_query_string'] = TRUE;            $config['query_string_segment'] = 'page';            $config['total_rows'] = $this->detalleventa->total_filas($rangofecha);            $config['per_page'] = '5';            $config['num_links'] = 4;            $config['first_link'] = '<<';            $config['last_link'] = '>>';            $config['next_link'] = '>';            $config['prev_link'] = '<';            $config['cur_tag_open'] = '&nbsp;&nbsp;&nbsp;<b>';            $config['cur_tag_close'] = '</b>';            $data['total_rows'] = $config['total_rows'];            $inicio = 0;            if ($this->input->get('page'))                $inicio = ($this->input->get('page') - 1) * $config['per_page'];            $this->pagination->initialize($config);            $noticias = $this->detalleventa->get_detalle_venta($config['per_page'], $inicio, $rangofecha);            $this->table->set_heading('FOLIO', 'FECHA', 'CODIGO DE BARRAS', 'TIPO', 'SUBTOTAL');            $template = array('table_open' => '<table border="0" id="reporte" cellpadding="4" cellspacing="0">');            $this->table->set_template($template);            $data['tabla'] = $this->table->generate($noticias);            $str_links = $this->pagination->create_links();            $data["link"] = explode('&nbsp;&nbsp;', $str_links);            echo json_encode($data);            } else            redirect('login', 'refresh');    }    public function printticket() {        $code = $this->input->get('code');        $data['code'] = $code;        $detalleticket = $this->detalletickets->datos($code);        $ticketgenerado = $this->ticketsgenerados->datos($detalleticket->id_ticketsgenerados);        $precioticket = $this->preciotickets->datos($ticketgenerado->id_preciotickets);        $data['tipo'] = $precioticket->tipo;        $data['horas'] = $precioticket->horas_vigencia;        $data['pases'] = $detalleticket->open;         $data['conta'] = $detalleticket->contador;        $data['redondo'] = $detalleticket->redondo;        $this->load->view('ventas/tiket', $data);    }    public function vistaticket() {        if ($this->session->userdata('logged_id')) {            $this->load->library('barcode');            $sesion = $this->session->userdata('logged_id');            $usuario = $sesion['usuario'];            // -------------------------------------------------- //            //                  PROPERTIES            // -------------------------------------------------- //            // download a ttf font here for example : http://www.dafont.com/fr/nottke.font            //$font     = './NOTTB___.TTF';            // - -            $font = './fonts/NewsCycle-Regular.ttf';            $fontSize = 10;   // GD1 in px ; GD2 in point            $marge = 10;   // between barcode and hri in pixel            $x = 125;  // barcode center            $y = 100;  // barcode center            $height = 50;   // barcode height in 1D ; module size in 2D            $width = 2;    // barcode height in 1D ; not use in 2D            $angle = 0;   // rotation in degrees : nb : non horizontable barcode might not be usable because of pixelisation            $code = ''; // barcode, of course ;)            $type = 'ean13';            // -------------------------------------------------- //            //                    USEFUL            // -------------------------------------------------- //            function drawCross($im, $color, $x, $y) {                imageline($im, $x - 10, $y, $x + 10, $y, $color);                imageline($im, $x, $y - 10, $x, $y + 10, $color);            }            // -------------------------------------------------- //            //            ALLOCATE GD RESSOURCE            // -------------------------------------------------- //            $im = imagecreatetruecolor(250, 200);            $black = ImageColorAllocate($im, 0x00, 0x00, 0x00);            $white = ImageColorAllocate($im, 0xff, 0xff, 0xff);            $red = ImageColorAllocate($im, 0xff, 0x00, 0x00);            $blue = ImageColorAllocate($im, 0x00, 0x00, 0xff);            imagefilledrectangle($im, 0, 0, 250, 200, $white);            // -------------------------------------------------- //            //                      BARCODE            // -------------------------------------------------- //            $data = Barcode::gd($im, $black, $x, $y, $angle, $type, array('code' => $this->input->get('code')), $width, $height);            if (isset($font)) {                $detalleticket = $this->detalletickets->datos($this->input->get('code'));                $ticketgenerado = $this->ticketsgenerados->datos($detalleticket->id_ticketsgenerados);                $precioticket = $this->preciotickets->datos($ticketgenerado->id_preciotickets);                $box = imagettfbbox($fontSize, 0, $font, $data['hri']);                $len = $box[2] - $box[0];                Barcode::rotate(-$len / 2, ($data['height'] / 2) + $fontSize + $marge, $angle, $xt, $yt);                imagerectangle($im, 10, 23, 240, 183, $black);                imagettftext($im, $fontSize, $angle, $x + $xt, $y + $yt, $black, $font, $data['hri']);                imagettftext($im, $fontSize, $angle, 25, 45, $black, $font, $precioticket->tipo);                imagettftext($im, $fontSize, $angle, 183, 45, $black, $font, 'Vigencia');                imagettftext($im, $fontSize, $angle, 177, 65, $black, $font, $precioticket->horas_vigencia . ' hora(s)');                imagettftext($im, $fontSize, $angle, $x + $xt, 170, $black, $font, 'Hotel Monte Taxco');            }            header('Content-type: image/gif');            imagegif($im);            imagedestroy($im);        } else            redirect('login', 'refresh');    }    public function generaticket() {        if ($this->session->userdata('logged_id')) {            $this->load->library('barcode');            $sesion = $this->session->userdata('logged_id');            $usuario = $sesion['usuario'];            $ticketgenerado = array(                'id_preciotickets' => $this->input->post('tipoticket'),                'cantidad' => 1,                'descuento' => '0 %' / 100,                'usuario_crea' => $usuario,                'fecha_creacion' => date('Y-m-d H:i:s'),            );            $id_ticketsgenerados = $this->ticketsgenerados->insert($ticketgenerado);           $precioticket = $this->preciotickets->datos($this->input->post('tipoticket'));            $existe = true;            $type = 'ean13';            $code = '';            $redondon = $precioticket->redondos;            while ($existe) {                for ($j = 0; $j < 10; $j++) {                    $min = ($j == 0) ? 1 : 0;                    $code .= mt_rand($min, 9);                }                $cb = Barcode::code($type, array('code' => $code . $this->input->post('tipoticket') . $redondon));                $existe = $this->detalletickets->existecb($cb);            }            $detalleticket = array(                'codigo_barras' => $cb,                'fecha_vigencia' => $this->input->post('tipoticket') == 1 ? date('Y-m-d', strtotime('+1 day')) : date('Y-m-d', strtotime('+1 week')), // Compara si los tickets generados son de tipo empleado donde le sume un dia y si no una semana                'id_estatus' => 1,                'id_ticketsgenerados' => $id_ticketsgenerados,                'contador' => 0,                'open' => ($redondon) ? $this->input->post('pases') * 2 : $this->input->post('pases'),                'redondo' => $redondon,            );            $result = $this->detalletickets->insert($detalleticket);            $precioticket = $this->preciotickets->datos($this->input->post('tipoticket'));            $generaticket = array(                'codigobarras' => $cb,                'tipo' => $precioticket->tipo,                'descuento' => '0%',                'open' => $this->input->post('pases'),                'subtotal' => '$' . number_format($precioticket->precio, 2, ".", ","),            );            echo json_encode($generaticket);        } else            redirect('login', 'refresh');    }}?>